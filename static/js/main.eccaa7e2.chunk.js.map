{"version":3,"sources":["components/Images/bitcoin.png","components/Home/HomeTweets.js","components/Home/HomePost.js","components/APIs/TweetsApi.js","components/Home/Home.js","components/Profile/ProfilePost.js","components/Profile/ProfileTweets.js","components/Profile/Profile.js","components/Body.js","components/Authentication/Config/Fire.js","components/APIs/TrendingApi.js","components/Calendar/Calendar.js","components/Twitter.js","components/Authentication/Login.js","App.js","serviceWorker.js","index.js","components/Images/profile.jpg"],"names":["module","exports","HomeTweets","className","alt","src","ProfilePic","width","height","this","props","tweets","date","body","comments","React","Component","HomePost","state","tweet","type","placeholder","onChange","event","text","target","value","setState","onClick","transferPost","TweetsApi","fetch","then","response","json","myJson","articles","map","item","index","key","BitcoinImg","publishedAt","slice","title","urlToImage","description","Home","ProfilePost","ProfileTweets","Profile","name","username","bio","linkedIn","portfolio","location","joined","born","Body","isHomePage","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","TrendingApi","action","url","Calendar","dateContext","moment","today","showMonthPopup","showYearPopup","selectedDay","weekdays","weekdaysShort","months","year","format","month","daysInMonth","currentDate","get","currentDay","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","onSelectChange","e","data","onMonthChange","SelectList","popup","href","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","onYearChange","onKeyUpYear","which","YearNav","defaultValue","ref","yearInput","onKeyUp","onDoubleClick","style","day","toUpperCase","blanks","i","push","d","selectedClass","totalSlots","rows","cells","forEach","row","insertRow","length","trElems","colSpan","createNewTweets","likes","Twitter","logout","auth","signOut","changeToProfile","changeToHome","add","Date","toDateString","x","unshift","Login","handleChange","login","preventDefault","signInWithEmailAndPassword","email","password","catch","error","fireErrors","message","register","createUserWithEmailAndPassword","getAction","formTitle","logInBtn","isLoading","errorNotification","submitBtn","login_register","App","user","authListener","onAuthStateChanged","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eccaa7e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bitcoin.298eb8eb.png\";","import React from 'react'\nimport ProfilePic from '../Images/profile.jpg';\n\nclass HomeTweets extends React.Component {\n    render() {\n        return (\n            <div className='tweets'>\n                <div><img className='smallProfilePic' alt=\"profile pic\" src={ProfilePic} width='40' height='40'/> <i className=\"postName\">Luis Abad {this.props.tweets.date}</i></div>\n                \n                <div className='tweetBody'>{this.props.tweets.body}</div>\n                {this.props.tweets.comments}\n                <button className='Btn'>Comment</button>\n                <button className='Btn'>Retweet</button>\n                <button className='Btn'>Likes</button>\n                <button className='Btn'>Share</button>\n                <hr></hr>\n            </div>\n        )\n    }\n}\n\nexport default HomeTweets;","import React from 'react'\nimport ProfilePic from '../Images/profile.jpg';\n\n\nclass HomePost extends React.Component {\n    state = {\n        tweet: ''\n    }\n    render() {\n        return (\n            <div className='posting'>\n                <img alt=\"profile pic\" className='smallProfilePic'src={ProfilePic} width='40' height='40'/>\n                <input\n                className='postInput'\n                type='text'\n                placeholder='What`s happening?'\n                onChange={(event)=>{\n                    let text = event.target.value\n                    this.setState({tweet: text})\n                }}\n                ></input>\n                {/* <button className='Btn'>Images</button>\n                <button className='Btn'>Gifs</button>\n                <button className='Btn'>Emoji</button> */}\n                <button\n                className='tweetBtn'\n                onClick={() => {\n                    this.props.transferPost(this.state.tweet)\n                }}\n                >Tweet</button>\n            </div>\n        )\n    }\n}\n\nexport default HomePost","import React from 'react';\nimport BitcoinImg from '../Images/bitcoin.png';\n\nclass TweetsApi extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tweets: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('http://newsapi.org/v2/everything?q=bitcoin&sortBy=publishedAt&apiKey=6107f6de55684cbab80484c839fbee1e')\n        .then((response) => {\n            return response.json();\n        })\n        .then((myJson) => {\n            this.setState({tweets: myJson.articles});\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.tweets.map((item, index) => {\n                    return (\n                        <div key={index} className='tweets'>\n                            <img className='bitcoinImg' alt=\"bitcoin profile pic\" src={BitcoinImg} width='50' height='50'/><i className=\"postName\"> Bitcoin {item.publishedAt.slice(0,10)}</i>\n                            <div className='title'>{item.title}</div>\n                            {/* <div>{item.url}</div> */}\n                            <img className='TweetImg' alt='' src={item.urlToImage} />\n                            <div className='tweetBody' >{item.description}</div>\n                            <button className='Btn'>Comment</button>\n                            <button className='Btn'>Retweet</button>\n                            <button className='Btn'>Like</button>\n                            <button className='Btn'>Share</button>\n                            <hr></hr>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default TweetsApi","import React from 'react';\nimport HomeTweets from './HomeTweets';\nimport HomePost from './HomePost';\nimport TweetsApi from '../APIs/TweetsApi';\n\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <h3 className='pageTitle'>Home</h3>\n                <hr></hr>\n                <HomePost transferPost={this.props.transferPost} />\n                <div className='space'></div>\n                <hr></hr>\n                {this.props.tweets.map((tweets, index) => {\n                    return <HomeTweets \n                        key={index}\n                        index={index}\n                        tweets={tweets}\n                    />\n                })}\n                <div>Powered by Google News</div>\n                <hr></hr>\n                <TweetsApi />\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react'\nimport ProfilePic from '../Images/profile.jpg';\n\nclass ProfilePost extends React.Component {\n    state = {\n        tweet: ''\n    }\n    render() {\n        return (\n            <div>\n                <img className='smallProfilePic' alt=\"profile pic\" src={ProfilePic} width='40' height='40'/>\n                <input\n                className='postInput'\n                type='text'\n                placeholder='What`s happening?'\n                onChange={(event)=>{\n                    let text = event.target.value\n                    this.setState({tweet: text})\n                }}\n                ></input>\n                <button\n                className='tweetBtn'\n                onClick={() => {\n                    this.props.transferPost(this.state.tweet)\n                }}\n                >Tweet</button>\n            </div>\n        )\n    }\n}\n\nexport default ProfilePost","import React from 'react'\nimport ProfilePic from '../Images/profile.jpg';\n\n\nclass ProfileTweets extends React.Component {\n    render() {\n        return (\n            <div className='tweets'>\n                <div><img className='smallProfilePic' alt=\"profile pic\" src={ProfilePic} width='40' height='40'/>{this.props.tweets.date}</div>\n                \n                <div className='tweetBody'>{this.props.tweets.body}</div>\n                {this.props.tweets.comments}\n                <button className='Btn'>Comment</button>\n                <button className='Btn'>Retweet</button>\n                {/* {this.props.tweets.likes} */}\n                <button className='Btn'>Likes</button>\n                <button className='Btn'>Share</button>\n                <hr></hr>\n            </div>\n        )\n    }\n}\n\nexport default ProfileTweets","import React from 'react';\nimport ProfilePic from '../Images/profile.jpg';\n// import Background from '../Images/background.jpg';\nimport ProfilePost from './ProfilePost';\nimport ProfileTweets from './ProfileTweets';\n\n\nclass Profile extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: 'Luis Abad',\n            username: '___UrbanLife___',\n            bio: 'Self-motivated developer with a passion for product design. With a keen eye for details, proven experience, imagination and who sees solutions and challenges where others see problems. I am also an out of the box thinker, a disciplined and devoted worker and an individual that is good at sticking to deadlines. ',\n            linkedIn: '',\n            portfolio: '',\n            location: 'Atlanta, Ga',\n            joined: 'November 2019',\n            born: 'June 5, 1993',\n        }\n    }\n    render() {\n        return (\n            <div>\n                <h3 className='pageTitle' >Profile</h3>\n                <hr></hr>\n                {/* <img src={Background} width='100' height='100'/> */}\n                <div className='backgroundImg'>\n                <img className='profilePic' alt=\"profile pic\" src={ProfilePic}/>\n                    \n                </div>\n                <div className='profileInfo'>\n                    <div className='userName'>{this.state.name}</div>\n                    <div>@{this.state.username}</div>\n                    <div className='profileBio'>{this.state.bio}</div>\n                    <div className='bellowBio'>\n                        <div> Location: {this.state.location}  | Born: {this.state.born}</div>\n                        <div>Joined: {this.state.joined}</div>\n                    </div>\n                    <button className='Btn'>Tweets</button> \n                    <button className='Btn'>Tweets and replies</button> \n                    <button className='Btn'>Media</button> \n                    <button className='Btn'>Likes</button>\n                </div>\n                <hr></hr>\n\n                <ProfilePost transferPost={this.props.transferPost} />\n                <div className='space'></div>\n                <hr></hr>\n                {this.props.tweets.map((tweets, index) => {\n                    return <ProfileTweets \n                        key={index}\n                        index={index}\n                        tweets={tweets}\n                    />\n                })}\n\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport Home from './Home/Home';\nimport Profile from './Profile/Profile';\n\n\nclass Body extends React.Component {\n    render() {\n        return (\n            <div >\n                <div>\n                    {this.props.isHomePage ? \n                    <Home \n                        tweets={this.props.tweets} \n                        transferPost={this.props.transferPost}\n                    /> : \n                    <Profile\n                        tweets={this.props.tweets} \n                        transferPost={this.props.transferPost}\n                    /> }\n                </div>\n\n                \n            </div>\n        )\n    }\n}\n\nexport default Body","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n    apiKey: \"AIzaSyDQx-evRp3Dr-s1rLikjhbd-kbeUUSvF7k\",\n    authDomain: \"twitter-18b8d.firebaseapp.com\",\n    databaseURL: \"https://twitter-18b8d.firebaseio.com\",\n    projectId: \"twitter-18b8d\",\n    storageBucket: \"twitter-18b8d.appspot.com\",\n    messagingSenderId: \"4301696340\",\n    appId: \"1:4301696340:web:b3eeeab17a1c0e75b96cc1\",\n    measurementId: \"G-D7T2NPYPGW\"\n};\n\n\nconst fire = firebase.initializeApp(config);\nexport default fire;","import React from 'react';\n\nclass TrendingApi extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=6107f6de55684cbab80484c839fbee1e')\n        .then((response) => {\n            return response.json();\n        })\n        .then((myJson) => {\n            this.setState({articles: myJson.articles});\n        });\n    }\n\n    render() {\n        // console.log(this.state)\n        return (\n            <div className='trending-container'>\n                <div className='trends-for-you'><h2>Whats Happening</h2> <div>Powered by Google News</div></div>\n                <hr></hr>\n                {this.state.articles.map((item, index) => {\n                    return (\n                        <div key={index} className='trending'>\n                        <h5 className=\"trendingTitle\">{item.title}</h5>\n                        {/* <img alt='' src={item.urlToImage} width='120' height='120'/> */}\n                        <div className=\"trendingBody\">{item.description}</div>\n                        <form action={item.url}>\n                            <button className='Btn' type=\"submit\">Read More</button>\n                        </form>\n                        <hr></hr>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default TrendingApi\n","import React from 'react';\nimport moment from 'moment';\nimport '../Calendar/Calendar.css'\n\nclass Calendar extends React.Component {\n    state = {\n        dateContext: moment(),\n        today: moment(),\n        showMonthPopup: false,\n        showYearPopup: false,\n        selectedDay: null\n    }\n\n    constructor(props) {\n        super(props);\n        this.width = props.width;\n        this.style = props.style;\n        // this.style.width = this.width;\n    }\n\n    weekdays = moment.weekdays();\n    weekdaysShort = moment.weekdaysShort();\n    months = moment.months();\n\n    year = () => this.state.dateContext.format(\"Y\");\n    month = () => this.state.dateContext.format(\"MMMM\");\n    daysInMonth = () => this.state.dateContext.daysInMonth();\n    currentDate = () => this.state.dateContext.get(\"date\");\n    currentDay = () => this.state.dateContext.format(\"D\");\n\n    firstDayOfMonth = () => {\n        let dateContext = this.state.dateContext;\n        let firstDay = moment(dateContext).startOf('month').format('d');\n        return firstDay;\n    }\n\n    setMonth = (month) => {\n        let monthNo = this.months.indexOf(month);\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"month\", monthNo);\n        this.setState({\n            dateContext: dateContext\n        });\n    }\n\n    onSelectChange = (e, data) => {\n        this.setMonth(data);\n        this.props.onMonthChange && this.props.onMonthChange();\n    }\n\n    SelectList = (props) => {\n        let popup = props.data.map((data) => {\n            return (\n                <div key={data}>\n                    <a href=\"#\" onClick={(e)=> {this.onSelectChange(e, data)}}>\n                        {data}\n                    </a>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"month-popup\">\n                {popup}\n            </div>\n        );\n    }\n\n    onChangeMonth = () => {\n        this.setState({\n            showMonthPopup: !this.state.showMonthPopup\n        });\n    }\n\n    MonthNav = () => {\n        return (\n            <span className=\"label-month\"\n                onClick={(e)=> {this.onChangeMonth(e, this.month())}}>\n                {this.month()}\n                {this.state.showMonthPopup &&\n                <this.SelectList data={this.months} />\n                }\n            </span>\n        );\n    }\n\n    showYearEditor = () => {\n        this.setState({\n            showYearNav: true\n        });\n    }\n\n    setYear = (year) => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"year\", year);\n        this.setState({\n            dateContext: dateContext\n        })\n    }\n\n    onYearChange = (e) => {\n        this.setYear(e.target.value);\n        this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n    }\n\n    onKeyUpYear = (e) => {\n        if (e.which === 13 || e.which === 27) {\n            this.setYear(e.target.value);\n            this.setState({\n                showYearNav: false\n            })\n        }\n    }\n\n    YearNav = () => {\n        return (\n            this.state.showYearNav ?\n            <input\n                defaultValue = {this.year()}\n                className=\"editor-year\"\n                ref={(yearInput) => { this.yearInput = yearInput}}\n                onKeyUp= {(e) => this.onKeyUpYear(e)}\n                onChange = {(e) => this.onYearChange(e)}\n                type=\"number\"\n                placeholder=\"year\"/>\n            :\n            <span\n                className=\"label-year\"\n                onDoubleClick={(e)=> { this.showYearEditor()}}>\n                {this.year()}\n            </span>\n        );\n    }\n\n    render() {\n        // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n        let weekdays = this.weekdaysShort.map((day) => {\n            return (\n                <td key={day} className=\"week-day\">{day.toUpperCase()}</td>\n            )\n        });\n\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(<td key={i * 80} className=\"emptySlot\">\n                {\"\"}\n                </td>\n            );\n        }\n\n        let daysInMonth = [];\n        for (let d = 1; d <= this.daysInMonth(); d++) {\n            let className = (d == this.currentDay() ? \"day current-day\": \"day\");\n            let selectedClass = (d == this.state.selectedDay ? \" selected-day \" : \"\")\n            daysInMonth.push(\n                <td key={d} className={className + selectedClass} >\n                    <span>{d}</span>\n                </td>\n            );\n        }\n\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n\n        totalSlots.forEach((row, i) => {\n            if ((i % 7) !== 0) {\n                cells.push(row);\n            } else {\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n            }\n        });\n\n        let trElems = rows.map((d, i) => {\n            return (\n                <tr key={i*100}>\n                    {d}\n                </tr>\n            );\n        })\n\n        return (\n            <div className=\"calendar-container\" style={this.style}>\n                <table className=\"calendar\">\n                    <thead>\n                        <tr className=\"calendar-header\">\n                            <td colSpan=\"5\">\n                                <this.MonthNav />\n                                {\" \"}\n                                <this.YearNav />\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                        {weekdays}\n                        </tr>\n                        {trElems}\n                    </tbody>\n                </table>\n\n            </div>\n\n        );\n    }\n}\n\nexport default Calendar","import React from 'react';\nimport Body from '../components/Body';\nimport fire from './Authentication/Config/Fire';\nimport TrendingApi from '../components/APIs/TrendingApi';\nimport Calendar from './Calendar/Calendar';\n\n\n\nfunction createNewTweets(date, body, comments, likes) {\n    return {\n        date,\n        body,\n        comments,\n        likes,\n    };\n}\n\nclass Twitter extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isHomePage: true,\n            index: null,\n            tweets: [\n            createNewTweets('Feb 20 2020', 'Welcome to my twitter project. Feel free to explore around by checking out my profile, what’s trending, and scrolling through bitcoins tweets. Trending section and bitcoin tweets are both powered by googles news api. Btw the tweets in my profile are random tweets by Elon Musk lol.', []),\n            createNewTweets('Feb 10 2020', 'Tesla April company talk will be from our Giga New York factory, where we make SolarGlass & several other products. Will also offer customer & media tours.', []),\n            createNewTweets('Feb 9 2020', 'All things in moderation, especially etymology', []),\n            createNewTweets('Feb 6 2020', 'Late night tweets … sigh', []),\n            createNewTweets('Feb 6 2020', 'Hard to believe that is high efficiency solar power seamlessly integrated into beautiful roof tiles. Great work by SolarGlass engineering, Giga NY factory & Tesla installation teams!', []),\n            createNewTweets('Feb 4 2020', 'Please let us know what improvements we can make to any aspect of Tesla SolarGlass roof! Critical feedback is much appreciated.', []),\n            ]\n        }\n        }\n\n        logout = () => {\n            fire.auth().signOut()\n        }\n\n        changeToProfile = () => {\n            this.setState({isHomePage: false})\n        }\n\n        changeToHome = () => {\n            this.setState({isHomePage: true})\n        }\n\n    render() {\n        return (\n        <div className='twitter'>\n            <div className='nav'>\n                <div className='nav-container'>\n                    <h1>Twitter</h1>\n                    <div className='buttonContainer'>\n                        <div><button className='navBtn'onClick={this.changeToHome}>Home</button></div>\n                        <div><button className='navBtn'>Explore</button></div>\n                        <div><button className='navBtn'>Notification</button></div>\n                        <div><button className='navBtn'>Messages</button></div>\n                        <div><button className='navBtn'>Bookmarks</button></div>\n                        <div><button className='navBtn'>List</button></div>\n                        <div><button className='navBtn' onClick={this.changeToProfile}>Profile</button></div>\n                        <div><button className='navBtn'>More</button></div>\n                        <button className='logoutBtn' onClick={this.logout}>LogOut</button>\n                    </div>\n                </div>\n            </div>\n    \n            <Body\n            isHomePage={this.state.isHomePage}\n            tweets={this.state.tweets}\n            transferPost = {(text) => {\n                let add = createNewTweets(new Date().toDateString(), text, [], 0);\n                let x = this.state.tweets\n                x.unshift(add);\n                this.setState({tweets: x});\n            }}\n            />\n\n    \n\n            <div className='right'>\n                <div><input className='search-bar' placeholder='Search Twitter'></input></div>\n                <Calendar />\n                <TrendingApi />\n            </div>\n        </div>\n        )\n    }\n}\n\n\nexport default Twitter","import React from 'react';\nimport '../Authentication/Login.css';\nimport fire from '../Authentication/Config/Fire';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            fireErrors: '',\n            formTitle: 'Login',\n            logInBtn: true,\n            isLoading: null,\n        }\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    login = e => {\n        e.preventDefault()\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n        .catch((error)=>{\n            this.setState({fireErrors: error.message})\n        });\n    }\n\n    register = e => {\n        e.preventDefault()\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .catch((error)=>{\n            this.setState({fireErrors: error.message})\n        });\n    }\n\n    getAction = action => {\n        if (action === 'reg') {\n            this.setState({\n                formTitle: 'Regester New User',\n                logInBtn: false,\n                fireErrors: ''\n            });\n        } else {\n            this.setState({\n                formTitle: 'Login',\n                logInBtn: true,\n                fireErrors: ''\n            });\n        }\n    }\n\n    render() {\n\n        let errorNotification = this.state.fireErrors ? (<div>{this.state.fireErrors}</div>) : null;\n\n        let submitBtn = this.state.logInBtn ? \n            (<input className='button' type='submit' onClick={this.login} value='Log In'/>) : \n            (<input className='button' type='submit' onClick={this.register} value='Sign Up'/>);\n\n        let login_register = this.state.logInBtn ? \n            (<button className='button' onClick={() => this.getAction('reg')}>Sign Up</button>) :\n            (<button className='button' onClick={() => this.getAction('login')}>Back Log In</button>);\n\n        return (\n            <div className='login'>\n                <div className='login-container'>\n                    <div className='top'>\n                        <h2>{this.state.formTitle}</h2>\n                    </div>\n\n                    <div className='bottom'>\n                        <div className='error'>{errorNotification}</div>\n\n                        <form className='form-container'>\n                            <div>\n                                Email:\n                                <input\n                                className='email'\n                                type=\"text\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                                name='email'\n                                placeholder='Email'\n                                />\n                            </div>\n\n                            <div>\n                                Password:\n                                <input\n                                className='email'\n                                type=\"text\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                                name='password'\n                                placeholder='Password'\n                                />\n                            </div>\n                            \n                        </form>\n                            {submitBtn}\n\n                            {login_register}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login","import React from 'react';\nimport './App.css';\nimport Twitter from './components/Twitter';\nimport Login from './components/Authentication/Login';\nimport fire from './components/Authentication/Config/Fire';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: null,\n    }\n  }\n\n  componentDidMount() {\n    this.authListener()\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({user});\n      } else {\n        this.setState({user: null});\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.user ? <Twitter /> : <Login />}</div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>, \ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile.b3f93697.jpg\";"],"sourceRoot":""}